{
  "hash": "53f304e0d58bb3764b6102e30092fffd",
  "result": {
    "markdown": "---\ntitle: \"Types and Classes\"\nsubtitle: \"Lecture 8\"\ndate: \"September 21, 2022\"\nformat: revealjs\n---\n\n\n## Checklist\n\n\n::: {.cell}\n\n:::\n\n\n## Checklist \n\n-   Open your `ae-07` project in RStudio.\n\n-   HW2 Due Tomorrow.\n\n-   Exam 1 is coming (next week!)\n\n## Announcements \n\n-- Regrade Requests\n\n## Goals:\n\n-- Understand how R treats data\n\n-- ggplot practice\n\n-- Practice re-creating graphs\n\n## Warm Up: Types of variables\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"countdown\" id=\"timer_8e237294\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">03</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n:::\n:::\n\n\n\nCategorical or quantitative?\n\n-- Zipcode \n\n-- Ounces of water drank \n\n-- Height of students (measured tall / short)\n\n-- Hours spent playing video games\n\n# Application exercise\n\n## `ae-07`\n\n-   Go to the course [GitHub org](https://github.com/sta199-f22-2) and find your `ae-07` (repo name will be suffixed with your GitHub name).\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n-   Render, commit, and push your edits by the AE deadline -- 3 days from today.\n\n## Recap of AE {.smaller}\n\n-- logical: a logical value.\n\n-- integer: an integer (positive or negative). Many R programmers do not use this mode since every integer value can be represented as a double.\n\n-- double: a real number stored in “double-precision floatint point format.”\n\n-- complex: a complex number\n\n-- character: a sequence of characters, called a “string” in other programming languages\n\n-- list: a list of named values\n\n-- NULL: a special type with only one possible value, known as NULL\n\nMore information can be found here: https://statsandr.com/blog/data-types-in-r/\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}