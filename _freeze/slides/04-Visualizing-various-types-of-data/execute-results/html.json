{
  "hash": "d969ceeedfa996b8921bdede9f114ad1",
  "result": {
    "markdown": "---\ntitle: \"Visualizing various types of data\"\nsubtitle: \"Lecture 4\"\ndate: \"September 8, 2022\"\nformat: revealjs\n---\n\n\n\n## Checklist \n\n\n::: {.cell}\n\n:::\n\n\n-- Go to the course [GitHub org](https://github.com/sta199-f22-2) and find your `ae-03-penguins` (repo name will be suffixed with your GitHub name).\n\n--   Clone the repo in your container, open the Quarto document in the repo\n\n-- Reach out if you have questions\n\n## Questions from Chp 4 - Exploring categorical data / Chp 5 - Exploring numerical data\n\nhttps://app.sli.do/event/mX7kxXxd49tL4VS9iwCa2T\n\n## Warm up: Exercises 2.3.1\n\n![](images/03-Grammer-of-Graphics/what'swrong.png){fig-align=\"center\"}\n\n## How to turn AE's via Github\n\n-- render, commit, and push\n\n1.  If you made any changes since the last render, render again to get the final version of the AE.\n\n2.  Check the box next to each document in the Git tab (this is called \"staging\" the changes). Commit the changes you made using an simple and informative message.\n\n3.  Use the **green arrow** to push your changes to your repo on GitHub.\n\n4.  Check your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you're good to go!\n\n\n## **The way data are displayed matters**\n\n::: question\nWhat do these three plots show?\n:::\n\n![Source: [#barbarplots](https://cogtales.wordpress.com/2016/06/06/congratulations-barbarplots/)](images/04-Visualizing-various-types-of-data/barplots.png){fig-alt=\"Three representations of the same data: Bar plot of means, box plots, histograms.\" fig-align=\"center\"}\n\n# Application exercise\n\n## ae-03\n-   Go to the course [GitHub org](https://github.com/sta199-f22-2) and find your `ae-03` (repo name will be suffixed with your GitHub name).\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n-   Render, commit, and push your edits by the AE deadline -- 3 days from today.\n\n## Recap of AE {.smaller}\n\n-   Pick geoms based on data types.\n-   Set appropriate binwidths for histograms.\n-   Turn off legends when they provide redundant information with `show.legend = FALSE`.\n-   Crea",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}