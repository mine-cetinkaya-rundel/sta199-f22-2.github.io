{
  "hash": "091a873c367c4e1beb14e72fb87f2f20",
  "result": {
    "markdown": "---\ntitle: \"Visualizing various types of data\"\nsubtitle: \"Lecture 4\"\ndate: \"September 8, 2022\"\nformat: revealjs\n---\n\n\n\n## Checklist \n\n\n::: {.cell}\n\n:::\n\n\n-- Go to the course [GitHub org](https://github.com/sta199-f22-2) and find your `ae-03-penguins` (repo name will be suffixed with your GitHub name).\n\n--   Clone the repo in your container, open the Quarto document in the repo\n\n-- Reach out if you have questions\n\n## Warm up: Exercises 2.3.1\n\n![](images/03-Grammer-of-Graphics/what'swrong.png){fig-align=\"center\"}\n\n## Questions from Chp 4 - Exploring categorical data / Chp 5 - Exploring numerical data\n\nhttps://app.sli.do/event/mX7kxXxd49tL4VS9iwCa2T\n\n\n\n## How to turn AE's via Github\n\n-- render, commit, and push\n\n1.  If you made any changes since the last render, render again to get the final version of the AE.\n\n2.  Check the box next to each document in the Git tab (this is called \"staging\" the changes). Commit the changes you made using an simple and informative message.\n\n3.  Use the **green arrow** to push your changes to your repo on GitHub.\n\n4.  Check your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you're good to go!\n\n\n## The variables dictate the plot\n\n-- Assess the relationship between height and weight \n\n-- Investigate the distribution of scores on exam 1\n\n-- Explore 2022 temperatures between Montana and North Carolina\n\n-- Examine if drinking coffee or not impacts the amount of sleep you get (above recommended, at recommended, below recommended)\n\n## The variables dictate the plot\n\n- Assess the relationship between height and weight - [geom_point()]{style=\"color:#cc0000\"}\n\n- Investigate the distribution of scores on exam 1 - [geom_histogram() / geom_boxplot]{style=\"color:#cc0000\"}\n\n- Explore 2022 temperatures between Montana and North Carolina - [geom_histogram / geom_boxplot (with changes in the aes!)]{style=\"color:#cc0000\"} \n\n- Examine if drinking coffee or not impacts the amount of sleep you get (above recommended, at recommended, below recommended) - [geom_bar (with changes in the aes!)]{style=\"color:#cc0000\"}\n\n# geom reference \n\nhttps://ggplot2.tidyverse.org/reference/\n\n**A geom is the geometrical object that a plot uses to represent data. People often describe plots by the type of geom that the plot uses. For example, bar charts use bar geoms, line charts use line geoms, boxplots use boxplot geoms, and so on. Scatterplots break the trend; they use the point geom. As we see above, you can use different geoms to plot the same data. ** \n\n# Application exercise\n\n## ae-03\n-   Go to the course [GitHub org](https://github.com/sta199-f22-2) and find your `ae-03` (repo name will be suffixed with your GitHub name).\n\n-   Clone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\n\n-   Render, commit, and push your edits by the AE deadline -- 3 days from today.\n\n## Recap of AE {.smaller}\n\n-   Pick geoms based on data types.\n\n-   Set appropriate binwidths for histograms.\n\n-   Turn off legends when they provide redundant information with `show.legend = FALSE`.\n\n-   Take control of your labels\n\n-   Use color to your advantage. https://ggplot2.tidyverse.org/reference/ggtheme.html \\& \\n https://ggplot2.tidyverse.org/reference/scale_viridis.html",
    "supporting": [
      "04-Visualizing-various-types-of-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}