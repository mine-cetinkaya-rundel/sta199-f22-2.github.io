{
  "hash": "9a9da5aafaec62fd98e8d8a8c265bcbf",
  "result": {
    "markdown": "---\ntitle: \"Lab 7 - Prediction and Bootstrapping\"\ncategories: \"Lab\"\nexecute:\n  eval: true\n---\n\n\n::: callout-important\nThis lab is due Monday 12th at 11:59pm.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.0     ✔ rsample      1.1.0\n✔ dials        1.0.0     ✔ tune         1.0.1\n✔ infer        1.0.3     ✔ workflows    1.1.0\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.2     ✔ yardstick    1.1.0\n✔ recipes      1.0.2     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n```\n:::\n\n```{.r .cell-code}\nlibrary(dsbox)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dsbox'\n\nThe following object is masked from 'package:infer':\n\n    gss\n```\n:::\n:::\n\n\nhttps://datasciencebox.org/course-materials/hw-instructions/hw-09/hw-09-modeling-gss.html\n\n# Instructions for project webpage compilation \n\n\n# Lab\n\n# Data\n\nThe data can be found in the **dsbox** package, and it's called `gss16`.\nSince the dataset is distributed with the package, we don't need to load it separately; it becomes available to us when we load the package.\n\nYou can find out more about the dataset by inspecting its documentation, which you can access by running `?gss16` in the Console or using the Help menu in RStudio to search for `gss16`.\nYou can also find this information [here](https://rstudio-education.github.io/dsbox/reference/gss16.html).\n\n\n# Exercises\n\n## Harassment at work: Exercise 1\n\na  Re-level the `advfront` variable such that it has two levels: `Strongly agree` and \"`Agree\"` combined into a new level called `agree` and the remaining levels (except `NA`s) combined into \"`Not agree\"`. Then, re-order the levels in the following order: `\"Agree\"` and `\"Not agree\"`. Finally, `count()` how many times each new level appears in the `advfront` variable.\n\n\n::: {.cell}\n\n```{.marginfigure .cell-code}\nYou can do this in various ways. One option is to use the `str_detect()` function to detect the existence of words. Note that these sometimes show up with lowercase first letters and sometimes with upper case first letters. To detect either in the `str_detect()` function, you can use \"[Al]gree\". However, solve the problem however you like, this is just one option!\n```\n:::\n\n\nb Combine the levels of the `polviews` variable such that levels that have the word \"liberal\" in them are lumped into a level called `\"Liberal\"` and those that have the word conservative in them are lumped into a level called `\"Conservative\"`. Then, re-order the levels in the following order: `\"Conservative\"` , `\"Moderate\"`, and `\"Liberal\"`. Finally, `count()` how many times each new level appears in the `polviews` variable.\n\nc  Create a new data frame called `gss16_advfront` that includes the variables `advfront`, `educ`, `polviews`, and `wrkstat`. Then, use the `drop_na()` function to remove rows that contain `NA`s from this new data frame. Sample code is provided below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngss16_advfront <- gss16 %>%\n  select(___, ___, ___, ___) %>%\n  drop_na()\n```\n:::\n\n\n## Exercise 2\n\na Create a logistic regression model \n\nb Write out the estimated model \n\nc Prediction question \n\n## Exercise 3\n\na Fit a new model that adds an additional explanatory variable to the model fit in exercise 2 part a. \n\nb Make an argument for the \"better\" model between the one fit in exercise 2, and exercise 3. \n\n\n## Confidence Intervals- Exercise 4\n\nIn 2016, the GSS added a new question on harassment at work. The question is phrased as the following.\n\nOver the past five years, have you been harassed by your superiors or co-workers at your job, for example, have you experienced any bullying, physical or psychological abuse?\n\nAnswers to this question are stored in the `harass5` variable in our dataset.\n\na Create a subset of the data that only contains `Yes` and `No` answers for the harassment question. How many responses chose each of these answers?\n\nb Describe how bootstrapping can be used to estimate the proportion of Americans who have been harassed by their superiors or co-workers at their job.\n\nc Calculate a 95% bootstrap confidence interval for the proportion of Americans who have been harassed by their superiors or co-workers at their job. Interpret this interval in context of the data.\n\n## Exercise 5\n\na Where was your 95% confidence interval centered? Why does this make sense? \n\nb Now, calculate 90% bootstrap confidence interval for the proportion of Americans who have been harassed by their superiors or co-workers at their job. Report the interval below. Is it wider or more narrow than the 95% confidence interval? \n\nc Now, suppose you created a bootstrap distribution with 50,000 simulations instead of 10,000. What would you expect to change (if anything)?\n\n- Center of the CI \n- Width of the CI \n\n\nd Now, suppose that that your sample size of____ increased from ____ to _____. What would you expect to change (if anything?)\n\n- Center of the CI \n- Width of the CI \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}